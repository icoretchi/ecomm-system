name: CI Checks

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Test
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir  reports
          cp cover.html reports/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: Copy Files
        run: |
          mkdir  artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: artifacts

deliver:
  name: Release
  needs: build
  runs-on: ubuntu-latest
  if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download binary
      uses: actions/download-artifact@v2
      with:
        name: api
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
    - name: Upload Release Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: api
        asset_name: api
        asset_content_type: application/octet-stream

deploy-function:
  name: Deploy FaaS
  runs-on: ubuntu-latest
  needs: test
  if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Deploy function
      id: deploy
      uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: translate
        entry_point: Translate
        runtime: go118
        credentials: ${{ secrets.gcp_credentials }}
    - id: test
      run: curl "${{ steps.deploy.outputs.url }}/hello"